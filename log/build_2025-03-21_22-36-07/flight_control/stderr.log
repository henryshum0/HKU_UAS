[01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:[m[K In constructor â€˜[01m[Kflight_control::OffboardController::OffboardController()[m[Kâ€™:
[01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:20:24:[m[K [01;31m[Kerror: [m[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say â€˜[01m[K&flight_control::OffboardController::local_position_callback[m[Kâ€™ [[01;31m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive-fpermissive]8;;[m[K]
   20 |             std::bind(&[01;31m[Klocal_position_callback[m[K, this, std::placeholders::_1));
      |                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:22:24:[m[K [01;31m[Kerror: [m[KISO C++ forbids taking the address of an unqualified or parenthesized non-static member function to form a pointer to member function.  Say â€˜[01m[K&flight_control::OffboardController::vehicle_status_callback[m[Kâ€™ [[01;31m[K]8;;https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html#index-fpermissive-fpermissive]8;;[m[K]
   22 |             std::bind(&[01;31m[Kvehicle_status_callback[m[K, this, std::placeholders::_2));
      |                        [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/11/memory:76[m[K,
                 from [01m[K/home/henryshum0/SUAS/install/px4_msgs/include/px4_msgs/px4_msgs/msg/detail/offboard_control_mode__struct.hpp:10[m[K,
                 from [01m[K/home/henryshum0/SUAS/install/px4_msgs/include/px4_msgs/px4_msgs/msg/offboard_control_mode.hpp:7[m[K,
                 from [01m[K/home/henryshum0/SUAS/src/flight_control/include/flight_control/offboard_controller.hpp:4[m[K,
                 from [01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:1[m[K:
/usr/include/c++/11/bits/unique_ptr.h: In instantiation of â€˜[01m[Ktypename std::_MakeUniq<_Tp>::__single_object std::make_unique(_Args&& ...) [with _Tp = flight_mode::TakeoffMode; _Args = {flight_control::OffboardController*, double}; typename std::_MakeUniq<_Tp>::__single_object = std::unique_ptr<flight_mode::TakeoffMode>][m[Kâ€™:
[01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:49:108:[m[K   required from here
[01m[K/usr/include/c++/11/bits/unique_ptr.h:962:30:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kflight_mode::TakeoffMode::TakeoffMode(flight_control::OffboardController*, double)[m[Kâ€™
  962 |     { return unique_ptr<_Tp>([01;31m[Knew _Tp(std::forward<_Args>(__args)...)[m[K); }
      |                              [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:2[m[K:
[01m[K/home/henryshum0/SUAS/src/flight_control/include/flight_mode/takeoff_mode.hpp:11:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kflight_mode::TakeoffMode::TakeoffMode(std::shared_ptr<flight_control::OffboardController>, float)[m[Kâ€™
   11 |         [01;36m[KTakeoffMode[m[K(std::shared_ptr<flight_control::OffboardController> offboard_controller, float takeoff_height);
      |         [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/henryshum0/SUAS/src/flight_control/include/flight_mode/takeoff_mode.hpp:11:73:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kflight_control::OffboardController*[m[Kâ€™ to â€˜[01m[Kstd::shared_ptr<flight_control::OffboardController>[m[Kâ€™
   11 |         TakeoffMode([01;36m[Kstd::shared_ptr<flight_control::OffboardController> offboard_controller[m[K, float takeoff_height);
      |                     [01;36m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
[01m[K/home/henryshum0/SUAS/src/flight_control/include/flight_mode/takeoff_mode.hpp:8:11:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kflight_mode::TakeoffMode::TakeoffMode(const flight_mode::TakeoffMode&)[m[Kâ€™
    8 |     class [01;36m[KTakeoffMode[m[K : public FlightMode
      |           [01;36m[K^~~~~~~~~~~[m[K
[01m[K/home/henryshum0/SUAS/src/flight_control/include/flight_mode/takeoff_mode.hpp:8:11:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
[01m[K/home/henryshum0/SUAS/src/flight_control/include/flight_mode/takeoff_mode.hpp:8:11:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kflight_mode::TakeoffMode::TakeoffMode(flight_mode::TakeoffMode&&)[m[Kâ€™
[01m[K/home/henryshum0/SUAS/src/flight_control/include/flight_mode/takeoff_mode.hpp:8:11:[m[K [01;36m[Knote: [m[K  candidate expects 1 argument, 2 provided
In file included from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21[m[K,
                 from [01m[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155[m[K,
                 from [01m[K/home/henryshum0/SUAS/src/flight_control/include/flight_control/offboard_controller.hpp:11[m[K,
                 from [01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:1[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:21:85:[m[K   required from here
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:27:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Kstd::function<void(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>::function(std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>&)[m[Kâ€™
  394 |       callback_variant_ = [01;31m[Kstatic_cast<typename scbth::callback_type>(callback)[m[K;
      |                           [01;31m[K^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/11/functional:59[m[K,
                 from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
                 from [01m[K/usr/include/c++/11/algorithm:74[m[K,
                 from [01m[K/home/henryshum0/SUAS/install/px4_msgs/include/px4_msgs/px4_msgs/msg/detail/offboard_control_mode__struct.hpp:8[m[K,
                 from [01m[K/home/henryshum0/SUAS/install/px4_msgs/include/px4_msgs/px4_msgs/msg/offboard_control_mode.hpp:7[m[K,
                 from [01m[K/home/henryshum0/SUAS/src/flight_control/include/flight_control/offboard_controller.hpp:4[m[K,
                 from [01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:1[m[K:
[01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class _Functor, class _Constraints> std::function<_Res(_ArgTypes ...)>::function(_Functor&&) [with _Functor = _Functor; _Constraints = _Constraints; _Res = void; _ArgTypes = {std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >}][m[Kâ€™
  435 |         [01;36m[Kfunction[m[K(_Functor&& __f)
      |         [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:435:9:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
In file included from [01m[K/usr/include/c++/11/bits/move.h:57[m[K,
                 from [01m[K/usr/include/c++/11/bits/stl_pair.h:59[m[K,
                 from [01m[K/usr/include/c++/11/utility:70[m[K,
                 from [01m[K/usr/include/c++/11/algorithm:60[m[K,
                 from [01m[K/home/henryshum0/SUAS/install/px4_msgs/include/px4_msgs/px4_msgs/msg/detail/offboard_control_mode__struct.hpp:8[m[K,
                 from [01m[K/home/henryshum0/SUAS/install/px4_msgs/include/px4_msgs/px4_msgs/msg/offboard_control_mode.hpp:7[m[K,
                 from [01m[K/home/henryshum0/SUAS/src/flight_control/include/flight_control/offboard_controller.hpp:4[m[K,
                 from [01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:1[m[K:
/usr/include/c++/11/type_traits: In substitution of â€˜[01m[Ktemplate<bool _Cond, class _Tp> using __enable_if_t = typename std::enable_if::type [with bool _Cond = false; _Tp = void][m[Kâ€™:
[01m[K/usr/include/c++/11/bits/std_function.h:353:8:[m[K   required by substitution of â€˜[01m[Ktemplate<class _Res, class ... _ArgTypes> template<class _Cond, class _Tp> using _Requires = std::__enable_if_t<_Cond::value, _Tp> [with _Cond = std::function<void(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>::_Callable<std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>&, std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>, std::__invoke_result<std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>&, std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > > > >; _Tp = void; _Res = void; _ArgTypes = {std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >}][m[Kâ€™
[01m[K/usr/include/c++/11/bits/std_function.h:434:9:[m[K   required from â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:21:85:[m[K   required from here
[01m[K/usr/include/c++/11/type_traits:2205:11:[m[K [01;31m[Kerror: [m[Kno type named â€˜[01m[Ktype[m[Kâ€™ in â€˜[01m[Kstruct std::enable_if<false, void>[m[Kâ€™
 2205 |     using [01;31m[K__enable_if_t[m[K = typename enable_if<_Cond, _Tp>::type;
      |           [01;31m[K^~~~~~~~~~~~~[m[K
In file included from [01m[K/usr/include/c++/11/functional:59[m[K,
                 from [01m[K/usr/include/c++/11/pstl/glue_algorithm_defs.h:13[m[K,
                 from [01m[K/usr/include/c++/11/algorithm:74[m[K,
                 from [01m[K/home/henryshum0/SUAS/install/px4_msgs/include/px4_msgs/px4_msgs/msg/detail/offboard_control_mode__struct.hpp:8[m[K,
                 from [01m[K/home/henryshum0/SUAS/install/px4_msgs/include/px4_msgs/px4_msgs/msg/offboard_control_mode.hpp:7[m[K,
                 from [01m[K/home/henryshum0/SUAS/src/flight_control/include/flight_control/offboard_controller.hpp:4[m[K,
                 from [01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:1[m[K:
/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of â€˜[01m[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; AllocatorT = std::allocator<void>][m[Kâ€™:
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:[m[K   required from â€˜[01m[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:[m[K   required from â€˜[01m[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = px4_msgs::msg::VehicleStatus_<std::allocator<void> >; CallbackT = std::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<px4_msgs::msg::VehicleStatus_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::allocator<void> > >][m[Kâ€™
[01m[K/home/henryshum0/SUAS/src/flight_control/src/offboard_controller.cpp:21:85:[m[K   required from here
[01m[K/usr/include/c++/11/bits/std_function.h:404:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::function<_Res(_ArgTypes ...)>&&) [with _Res = void; _ArgTypes = {std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >}][m[Kâ€™
  404 |       [01;36m[Kfunction[m[K(function&& __x) noexcept
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:404:27:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>[m[Kâ€™ to â€˜[01m[Kstd::function<void(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>&&[m[Kâ€™
  404 |       function([01;36m[Kfunction&& __x[m[K) noexcept
      |                [01;36m[K~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:386:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(const std::function<_Res(_ArgTypes ...)>&) [with _Res = void; _ArgTypes = {std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >}][m[Kâ€™
  386 |       [01;36m[Kfunction[m[K(const function& __x)
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:386:32:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>[m[Kâ€™ to â€˜[01m[Kconst std::function<void(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>&[m[Kâ€™
  386 |       function([01;36m[Kconst function& __x[m[K)
      |                [01;36m[K~~~~~~~~~~~~~~~~^~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:375:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function(std::nullptr_t) [with _Res = void; _ArgTypes = {std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >}; std::nullptr_t = std::nullptr_t][m[Kâ€™
  375 |       [01;36m[Kfunction[m[K(nullptr_t) noexcept
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:375:16:[m[K [01;36m[Knote: [m[K  no known conversion for argument 1 from â€˜[01m[Kstd::_Bind<void (flight_control::OffboardController::*(flight_control::OffboardController*, std::_Placeholder<2>))(std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >)>[m[Kâ€™ to â€˜[01m[Kstd::nullptr_t[m[Kâ€™
  375 |       function([01;36m[Knullptr_t[m[K) noexcept
      |                [01;36m[K^~~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Kstd::function<_Res(_ArgTypes ...)>::function() [with _Res = void; _ArgTypes = {std::unique_ptr<px4_msgs::msg::VehicleStatus_<std::allocator<void> >, std::default_delete<px4_msgs::msg::VehicleStatus_<std::allocator<void> > > >}][m[Kâ€™
  368 |       [01;36m[Kfunction[m[K() noexcept
      |       [01;36m[K^~~~~~~~[m[K
[01m[K/usr/include/c++/11/bits/std_function.h:368:7:[m[K [01;36m[Knote: [m[K  candidate expects 0 arguments, 1 provided
gmake[2]: *** [CMakeFiles/offboard_controller.dir/build.make:76: CMakeFiles/offboard_controller.dir/src/offboard_controller.cpp.o] Error 1
gmake[1]: *** [CMakeFiles/Makefile2:165: CMakeFiles/offboard_controller.dir/all] Error 2
gmake: *** [Makefile:146: all] Error 2
